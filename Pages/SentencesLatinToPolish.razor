@page "/SentencesLatinToPolish"

<h2>Sentencje (lat -> pl)</h2>

<div class="container">
    <div class="row">
        <div class="col">
            @points / @total (@(total > 0 ? (points / total*100) : 0)%)
        </div>
    </div>

    <div class="row">
        <div class="col">
            <div class="card">
                <div class="card-body">
                    @currentText
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-3">
        <div class="col">
            @if(total == 0)
            {
                <button @onclick="Start" class="btn btn-info">Start</button>
            }
            else
            {
                <button @onclick="Check" class="btn btn-primary">Sprawdź</button>
            }
        </div>
    </div>
    @if (showPoints)
    {
        <div class="row mt-3">
            <div class="col">
                <button @onclick="AddPoint" class="btn btn-success">+1</button>
                <button @onclick="Next" class="btn btn-danger">0</button>
            </div>
        </div>
    }
</div>

@code {
    private (string latin, string polish) currentCard = ("", "");
    private string currentText = string.Empty;
    private static Random rng = new Random(DateTime.Now.Millisecond);
    private int total = 0;
    private int points = 0;
    private bool showPoints = false;

    void Check()
    {
        this.currentText = currentCard.polish;
        this.showPoints = true;
    }

    void Next()
    {
        var listNum = rng.Next(1, 8);

        var list = listNum switch
        {
            1 => SentencesI,
            2 => SentencesII,
            3 => SentencesIII,
            4 => SentencesIV,
            5 => SentencesV,
            6 => SentencesVI,
            7 => SentencesVII,
            8 => SentencesVIII,
        };

        this.currentCard = list[rng.Next(0, list.Count - 1)];
        this.currentText = this.currentCard.latin;
        this.total++;
        this.showPoints = false;
    }

    void Start()
    {
        Next();
    }

    void AddPoint()
    {
        this.points++;
        Next();
    }

    private List<(string latin, string polish)> SentencesI = new List<(string latin, string polish)>
    {
        ("Hóminum causa omne ius constitútum sit.", "Wszelkie prawo powinno być stanowione ze względu na ludzi. "),
        ("Lex retro non agit.", "Prawo nie działa wstecz."),
        ("Lex próspicit, non réspicit.", "Prawo patrzy w dal, a nie wstecz. "),
        ("Leges ab ómnibus intéllegi debent.", "Ustawy powinny być zrozumiałe przez wszystkich. "),
        ("Lex postérior derógat legi prióri.", "Ustawa późniejsza uchyla ustawę wcześniejszą. "),
        ("Leges bonae ex malis móribus procreántur.", "Dobre ustawy rodzą się ze złych obyczajów. "),
        ("Óptima est legum ínterpres consuetúdo.", "Praktyka (zwyczaj) jest najlepszą wykładnią ustaw. "),
        ("Ius civile vigilántibus scriptum est.", "Prawo cywilne napisane jest dla osób starannych. "),
        ("Dura lex, sed lex.", "Twarde prawo, ale prawo. "),
        ("Summum ius summa iniuria.  ", "Najwyższe prawo [bywa] najwyższym bezprawiem. "),
        ("Scire leges non hoc est verba eárum tenére, sed vim ac potestátem.", "Znajomość ustaw nie polega na  trzymaniu się ich słów, lecz sensu i znaczenia.  "),
        ("Iura non in síngulas persónas, sed generáliter constituúntur.", "Prawa ustanawia się nie dla konkretnych osób, lecz dla wszystkich. "),
        ("Male enim nostro iure uti non debémus. ", "Nie powinniśmy bowiem źle korzystać z naszego prawa. "),
        ("In légibus magis simplícitas quam difficúltas placet.", "W ustawach bardziej podoba sie prostota niż zawiłość.  "),
        ("Non omne quod licet honéstum est.", "Nie wszystko co jest dozwolone, jest uczciwe.  "),
        ("Ignorántia iuris nocet, ignorantia facti non nocet.", "Nieznajomość prawa szkodzi, nieznajomość faktu nie szkodzi.  ")
    };

    private List<(string latin, string polish)> SentencesII = new List<(string latin, string polish)>
    {
        ("Cessánte ratióne legis cessat et lex ipsa. ", "Gdy ustaje przyczyna ustawy, ustaje i sama ustawa. "),
        ("Iustitia est constans et perpétua volúntas ius suum cuíque tribuéndi.", "Sprawiedliwość jest stałą i niezmienną wolą oddania każdemu tego, co mu się należy. "),
        ("Lex necessitátis est lex témporis. ", "Ustawa (wydana w chwili) konieczności jest prawem chwili. "),
        ("In dubio pro libertáte. ", "W razie wątpliwości na rzecz wolności. "),
        ("Inténtio inservíre debet légibus, non leges intentióni.", "Wola (osób) powinna poddać się ustawom, a nie ustawy woli (osób). "),
        ("Lex uno ore omnes allóquitur.", "Ustawa przemawia do wszystkich jednym głosem. "),
        ("Una atquae éadem voce lex ómnibus loqui debet.", "Ustawa powinna mówić do wszystkich jednym i tym samym głosem. "),
        ("Ius públicum privatórum pactis mutári non potest. ", "Prawo publiczne nie może być zmieniane umowami osób prywatnych. "),
        ("Iustítia est fundaméntum regnórum. ", "Sprawiedliwość jest fundamentem rządów. "),
        ("Lex iniusta non est lex. ", "Ustawa niesprawiedliwa nie jest ustawą. "),
        ("Lex iniustíssima non est lex. ", "Ustawa rażąco niesprawiedliwa nie jest ustawą.  "),
        ("Lex non óbligat nisi promulgáta. ", "Prawo nie obowiązuje, jeśli nie jest ogłoszone. "),
        ("Líberae sunt cogitatiónes nostrae. ", "Nasze myśli są wolne. "),
        ("Non exémplis, sed légibus iudicándum est. ", "Należy orzekać na podstawie ustaw, a nie naśladować wcześniejsze rozstrzygnięcia. "),
        ("Non sunt iudicándae leges. ", "Ustawy nie powinny podlegać osądowi.  "),
        ("Omnes hómines aequáles sunt. ", "Wszyscy ludzie są równi. "),
        ("Salus pópuli supréma lex.", "Dobro ludu najwyższym prawem. ")
    };

    private List<(string latin, string polish)> SentencesIII = new List<(string latin, string polish)>
    {
        ("Libértas inaestimábilis res est.", "Wolność jest rzeczą niedającą się oszacować w pieniądzach. / Wolność jest rzeczą bezcenną. "),
        ("Nascitúrus pro iam nato habétur, quótiens de cómmodis eius ágitur.  ", "Dziecko poczęte uznawane jest za już urodzone, ilekroć chodzi o jego korzyści. "),
        ("Tres fáciunt collégium.", "Trzy osoby tworzą stowarzyszenie. "),
        ("Matrimónium inter invítos non contráhitur.", "Małżeństwa nie zawiera się wbrew woli. "),
        ("Líbera matrimónia esse antíquitus plácuit.", "Od dawna się przyjęło, że małżeństwa są możliwe do rozwiązania. "),
        ("Mater semper certa est, pater quem nuptiae demónstrant.", "Matka jest zawsze pewna, ojcem jest ten, na kogo wskazuje małeństwo. "),
        ("Adoptio natúram imitátur.", "Adopcja naśladuje naturę. "),
        ("Quod ab initio vitiósum est, non potest tractu témporis convaléscere.", "To, co od początku jest wadliwe, nie może być uzdrowione z upływem czasu. "),
        ("Furiósi volúntas nulla est.", "Chory umysłowo nie ma woli."),
        ("In conventiónibus contrahéntium voluntátem potius quam verba spectári plácuit.", "Przyjęło się, że  w umowach powinna być bardziej uwzględniana wola stron niż [użyte przez nie] słowa. "),
        ("Actus omíssa forma legis córruit.", "Czynność prawna dokonana z naruszeniem przypisanej prawem formy jest nieważna. "),
        ("Errántis volúntas nulla est.", "Działający pod wpływem błędu nie wyraża woli. "),
        ("Falsa causa non nocet.", "Fałszywa pobudka nie szkodzi."),
        ("Turpes conditiónes remitténdae sunt.", "Niemoralne warunki należy odrzucić.  "),
        ("Volénti non fit iniuria.", "Chcącemu nie dzieje się krzywda.  ")
    };

    private List<(string latin, string polish)> SentencesIV = new List<(string latin, string polish)>
    {
        ("Accéssio cédit principáli.", "Przyrost przypada rzeczy głównej. "),
        ("Nemo invítus compéllitur ad communiónem.", "Nikt nie może być zmuszony do pozostawania we współwłasności. "),
        ("Nemo plus iuris ad alium transférre potest, quam ipse habet.", "Nikt nic może przenieść na drugiego więcej prawa, niż sam ma. "),
        ("Nulli res sua servit.", "Nie można mieć służebności na własnej rzeczy. "),
        ("Posséssor malae fidei ullo témpore non praescríbit.", "Posiadacz w zlej wierze bez względu na czas nie może zasiedzieć rzeczy. "),
        ("Prior témpore potior iure.", "Kto lepszy co do czasu, ten lepszy co do prawa. "),
        ("Res nullíus cedit primo occupánti.", "Rzecz niczyja przypada temu, kto pierwszy ją zawłaszczył. "),
        ("Servítus in faciéndo consístere nequit.", "Służebność nic może polegać na działaniu. "),
        ("Superfícies solo cedit.", "To, co znajduje się na gruncie, przypada gruntowi. "),
        ("Heréditas nihil aliud est, quam succéssio in univérsum ius, quod defúnctus habúerit.", "Dziedziczenie jest niczym innym, jak wejściem w ogół praw, jakie posiadał zmarły.  "),
        ("In poenam heres non succédit.", "Spadkobierca nie dziedziczy kary. "),
        ("Indígno aufértur heréditas.", "Niegodnemu odbiera się spadek. "),
        ("In testaméntis plénius testatóris intentiónem scrutámur.", "W testamentach interpretujemy jak najpełniej wolę spadkodawcy. "),
        ("Portio portióni accréscit.", "Udział przyrasta do udziału. "),
        ("Semel heres semper heres.", "Kto zostaje dziedzicem, pozostaje nim na zawsze. ")
    };

    private List<(string latin, string polish)> SentencesV = new List<(string latin, string polish)>
    {
        ("Impossibílium nulla obligátio est.", "Zobowiązanie do  wykonanie świadczenia niemożliwego jest nieważne.   "),
        ("Ex malefício non orítur contráctus.", "Z bezprawnego działania nie powstaje zobowiązanie umowne. "),
        ("Pacta sunt servánda.", "Umów należy dotrzymywać. "),
        ("Convéntio omnis intellégitur rebus sic stántibus.", "Każda umowa jest pojmowana jako obowiązująca w określonych warunkach.  "),
        ("Contráctus ab inítio voluntátis est, ex post factum necéssitatis.", "Zawarcie umowy jest dobrowolne, ale następstwa są przymusowe. "),
        ("Ambigúitas contra stipulatórem.", "Sformułowanie dwuznaczne rozumieć należy przeciw wierzycielowi. "),
        ("Casus a nullo praestátur.", "Za przypadek nikt nie odpowiada. "),
        ("Genus períre non potest.", "Gatunek nie może zaginąć."),
        ("Dies interpéllat pro hómine.", "Termin wzywa zamiast człowieka (wierzyciela). "),
        ("In conventiónibus contrahéntium volúntas potius quam verba spectánda sunt.", "W umowach należy bardziej uwzględniać wolę stron niż ich słowa. "),
        ("Emptio tollit locátum.", "Kupno uchyla najem. "),
        ("Cáveat emptor.", "Niech kupujący ma się na baczności. "),
        ("Perículum est emptóris.", "Ryzyko ponosi nabywca."),
        ("In contráctibus tácite insunt, quae sunt moris et consuetúdinis.", "Uznaje się za włączone w sposób milczący do umowy to, co jest obyczajem i zwyczajem. "),
        ("Lex dilatiónis exhórret.", "Prawo nie znosi zwłoki.  ")
    };

    private List<(string latin, string polish)> SentencesVI = new List<(string latin, string polish)>
    {
        ("Actor séquitur forum rei.", "Powód idzie za sądem pozwanego "),
        ("Audiátur et áltera pars.", "Niech będzie wysłuchana i druga strona. "),
        ("Bis de éadem re agi non potest.", "Nie można procesować się dwa razy o to samo. "),
        ("Bis de éadem re ágere non licet.", "Nie można procesować się dwa razy w tej samej sprawie. "),
        ("Da mihi factum, dabo tibi ius.", "Podaj mi fakt, a dam ci prawo. "),
        ("Ei incúmbit probátio, qui dicit, non qui negat.", "Ciężar dowodu spoczywa na tym, kto twierdzi, a nie na tym, kto zaprzecza. "),
        ("Facta probántur, iura novit curia", "Faktów się dowodzi, prawo zna sąd.  "),
        ("Ne eat iudex ultra petíta partium.", "Niech sędzia nie wykracza ponad żądania stron. "),
        ("Nemo iudex in priopria causa.", "Nikt nie może być sędzią we własnej sprawie. "),
        ("Reformátio in peius iúdici appelláto non licet.", "Sędziemu apelacyjnemu nie wolno zmieniać (wyroku) na niekorzyść (odwołującego się). "),
        ("Conféssio pro iudicáto est.", "Uznanie roszczeń powoda traktowane jest jak wydanie wyroku na samego siebie. "),
        ("Testis non est iudicáre.", "Sądzenie nie jest rolą świadka. "),
        ("Res iudicáta pro veritáte accípitur.", "Wyrok przyjmuje się jako prawdę. "),
        ("Apud bonum iúdicem arguménta plus quam testes valent.", "Dla dobrego sędziego argumenty znaczą więcej niż zeznania świadków.  "),
        ("Compromíssum ad similitúdinem iudiciórum redígitur.", "Ugoda sądowa upodabnia się do wyroku. "),
        ("Idónei non vidétur testes, quibus imperári potest ut testes fíant.", "Nie wydaje się, aby dobrymi świadkami byli ci, którym można nakazać, aby byli świadkami. "),
    };

    private List<(string latin, string polish)> SentencesVII = new List<(string latin, string polish)>
    {
        ("Accusáre nemo se debet.", "Nikt nie musi oskarżać samego siebie. "),
        ("Bis de éadem ne sit actio.", "Nie procesuje się dwa razy w tej samej sprawie.  "),
        ("Conféssio est regína probatiónum.", "Przyznanie się do winy jest królową dowodów.  "),
        ("Conféssus pro iudicáto est.", "Ten, kto się przyznał, uważany jest za zasądzonego. "),
        ("Nemo iudex in causa sua.", "Nikt nie jest sędzią w swojej sprawie. "),
        ("Nulla poena sine culpa.", "Nie ma kary bez winy. "),
        ("Nullum crimen sine lege.", "Nie ma przestępstwa bez ustawy. "),
        ("Nullum crimen sine perículo sociáli.", "Nie ma przestępstwa bez społecznego niebezpieczeńswa czynu. "),
        ("Nulla poena sine lege.", "Nie ma kary bez ustawy. "),
        ("Reformátio in peius iúdici appelláto non licet.", "Sedziemu [wyższej instancji] nie wolno zmieniać wyroku na niekorzyść strony, która wniosła apelację. "),
        ("In dubio pro reo.", "W razie wątpliwości na na korzyść oskarżonego. "),
        ("Abséntem in crimínibus damnári non óportet.", "W procesach karnych nie należy skazywać nieobecnego.  "),
        ("Fere in ómnibus poenálibus iudíciis et aetáti et imprudéntiae succúritur.", "Niemal we wszystkich procesach karnych uwzględnia się tak wiek, jak i brak doświadczenia. "),
        ("Lex severior retro non agit.", "Prawo nie działa wstecz. "),
        ("Tantum devolútum, quantum appellátum.", "Sprawa przechodzi do wyższej instancji w takim zakresie, w jakim zostało to określone w apelacji. "),
        ("Poena maior absórbet minórem.", "Kara cięższa pochłania lżejszą. ")
    };

    private List<(string latin, string polish)> SentencesVIII = new List<(string latin, string polish)>
    {
        ("Par in parem non habet iudícium.", "Równy nie może sądzić równego sobie. "),
        ("Lex postérior derógat legi prióri.", "Akt późniejszy uchyla moc obowiązującą aktu wcześniejszego. "),
        ("Pacta tértiis nec nocent nec prosunt.", "Umowy ani nie przyznają praw ani nie nakładają obowiązków na państwa, które nie są ich stronami. "),
        ("Pacta sunt servánda.", "Umów należy przestrzegać. "),
        ("Ne impediátur legátio.", "Niech dyplomata nie napotyka przeszkód w wykonywaniu swych czynności.  "),
        ("Qui in território meo est, etiam meus súbditus est.", "Kto jest na moim terytorium, jest moim poddanym.(Sens: Ktokolwiek znajduje się na terytorium danego państwa, podlega jego władzy i prawu.) "),
        ("Quidquid est in território, est etiam de território.", "Cokolwiek znajdujące się na terytorium danego państwa podlega jego władzy i prawu. "),
        ("Aut dédere, aut iudicáre.", "Albo wydać, albo osądzić. "),
        ("Ex iniúria ius non óritur.", "Z bezprawia nie powstaje prawo. "),
        ("Inadimplénti non est adimpléndum.", "Na rzecz strony niewypełniającej zobowiązania nie   powinno się  wypełniać zobowiązania wzajemnego. "),
        ("Nemo potest cómmodum cápere de iniuria sua própria.", "Nikt nie może czerpać korzyści ze  swego  własnego bezprawia. "),
        ("Veníre contra factum próprium némini licet.", "Nikomu nie wolno występować przeciwko temu, co wynika z jego własnych czynów. "),
        ("Uti possidétis, ita possideátis.", "Jak posiadacie, tak posiadajcie. "),
        ("Eius est interpretári, cuius est cóndere.", "Ten może interpretować, kto jest upoważniony do tworzenia prawa. "),
        ("Ex consénsu ádvenit vínculum.", "Podstawą zobowiązania jest zgoda [państw]. ")
    };
}
